type ReptileFeedingLog @model @auth(rules: [{allow: public}]) {
  id: ID!
  weight: Float
  detail: String
  environmentHumidity: Float
  environmentTemperature: Float
  feedingDateTime: AWSDateTime
  userID: String
  reptileID: ID! @index(name: "byReptile")
}

type ReptileFeedingBoxIndexCollection @model @auth(rules: [{allow: public}]) {
  id: ID!
  verticalIndex: Int
  horizontalIndex: Int
  userID: String
  reptileFeedingBoxID: ID! @index(name: "byReptileFeedingBox")
  Reptiles: [Reptile] @hasMany(indexName: "byReptileFeedingBoxIndexCollection", fields: ["id"])
}

enum ReptileGenderType {
  MALE
  FAMALE
  POSSIBLE_MALE
  POSSIBLE_FAMALE
  UNKNOWN
}

type Reptile @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  nickname: String
  gender: ReptileGenderType
  weight: Float
  birthdate: AWSDate
  userID: String
  reptileTypeID: ID! @index(name: "byReptileType")
  ReptileFeedingLogs: [ReptileFeedingLog] @hasMany(indexName: "byReptile", fields: ["id"])
  reptileFeedingBoxIndexCollectionID: ID! @index(name: "byReptileFeedingBoxIndexCollection")
  reptileFeedingBoxID: ID! @index(name: "byReptileFeedingBox")
  genies: [String]
}

enum ReptileFeedingBoxType {
  BOX
  CABINET
}

type ReptileFeedingBox @model @auth(rules: [{allow: public}]) {
  id: ID!
  type: ReptileFeedingBoxType
  name: String
  userID: String
  ReptileFeedingBoxIndexCollections: [ReptileFeedingBoxIndexCollection] @hasMany(indexName: "byReptileFeedingBox", fields: ["id"])
  Reptiles: [Reptile] @hasMany(indexName: "byReptileFeedingBox", fields: ["id"])
}

type ReptileType @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  Reptiles: [Reptile] @hasMany(indexName: "byReptileType", fields: ["id"])
}
 